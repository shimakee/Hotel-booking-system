<UserControl x:Class="AvenueOne.Views.UserControls.CustomerFormControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:AvenueOne.Views.UserControls"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:converters="clr-namespace:AvenueOne.Converters"
             mc:Ignorable="d" 
             x:Name="Cfc"
             d:DesignHeight="400" d:DesignWidth="400">

    <UserControl.Resources>
        <converters:BooleanVisibilityConverter x:Key="BooleanVisibilityConverter"/>
    </UserControl.Resources>

    <!--<Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>

        --><!--Form--><!--
        <Grid Grid.Row="0"
              x:Name="Form">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="Background" Value="Black"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Customer.Person.Gender, ElementName=Cfc}" Value="0">
                                <Setter Property="Background" Value="CornflowerBlue"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Customer.Person.Gender, ElementName=Cfc}" Value="1">
                                <Setter Property="Background" Value="LightPink"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>


                <Image Grid.Row="0"
                    HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10"
                   MaxHeight="80" MaxWidth="80">
                    <Image.Style>
                        <Style TargetType="Image">
                            <Setter Property="Source" Value="{StaticResource maleGenderIcon}" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Customer.Person.Gender, ElementName=Cfc}" Value="0">
                                    <Setter Property="Source" Value="{StaticResource maleGenderIcon}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Customer.Person.Gender, ElementName=Cfc}" Value="1">
                                    <Setter Property="Source" Value="{StaticResource femaleGenderIcon}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
                <Button Grid.Row="1"
                    Style="{StaticResource defaultButtonStyle}" Content="Upload"/>
            </Grid>

            <StackPanel Grid.Column="1">
                <TextBox Template="{StaticResource roundedTextbox}" Margin="5" FontSize="18"
                         x:Name="First" Tag="{StaticResource femaleGenderIcon}" Text="{Binding Customer.Person.FirstName, ElementName=Cfc}"/>
                <TextBox Template="{StaticResource roundedTextbox}" Margin="5" FontSize="18"
                         x:Name="Middle" Text="{Binding Customer.Person.MiddleName, ElementName=Cfc}"/>
                <TextBox Template="{StaticResource roundedTextbox}" Margin="5" FontSize="18"
                         x:Name="Last" Text="{Binding Customer.Person.LastName, ElementName=Cfc}"/>
                <TextBox Template="{StaticResource roundedTextbox}" Margin="5" FontSize="18"
                         x:Name="Suffix" Text="{Binding Customer.Person.Suffix, ElementName=Cfc}"/>
                <TextBox  IsEnabled="{Binding Customer.Person.WasMaiden, ElementName=Cfc}" Visibility="{Binding Customer.Person.WasMaiden, ElementName=Cfc, Converter={StaticResource BooleanVisibilityConverter}}"
                        Template="{StaticResource roundedTextbox}" Margin="5" FontSize="18"
                         x:Name="Maiden" Text="{Binding Customer.Person.MaidenName, ElementName=Cfc}"/>
            </StackPanel>

            <StackPanel Grid.Column="2">

                <ComboBox x:Name="CustomerGender" SelectedIndex="0"  ItemsSource="{Binding Customer.Person.GenderValues, ElementName=Cfc}" 
                                                  SelectedValue="{Binding Customer.Person.Gender, ElementName=Cfc, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True}"
                                                  Validation.ErrorTemplate="{StaticResource errorTemplate}"/>
                <ComboBox x:Name="CustomerCivilStatus" SelectedIndex="0" ItemsSource="{Binding Customer.Person.CivilStatusValues, ElementName=Cfc}"
                                                  SelectedValue="{Binding Customer.Person.CivilStatus, ElementName=Cfc, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True}"
                                                  Validation.ErrorTemplate="{StaticResource errorTemplate}"/>
                <DatePicker x:Name="CustomerBirthdate" Grid.Column="1"
                                            SelectedDate="{Binding Customer.Person.BirthDate, ElementName=Cfc, TargetNullValue={x:Static system:DateTime.Today}, FallbackValue={x:Static system:DateTime.Today},
                                            ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True}"
                                            Validation.ErrorTemplate="{StaticResource errorTemplateStack}"/>

                --><!--<Button Style="{StaticResource defaultButtonStyle}" Content="Close" Click="ChangeVisibility"/>--><!--
            </StackPanel>
        </Grid>
    </Grid>-->

    <WrapPanel ItemWidth="400" MaxWidth="1200" MinWidth="400">

        <Grid Grid.Column="0" HorizontalAlignment="Center" Width="400">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="Background" Value="Black"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Customer.Person.Gender, ElementName=Cfc}" Value="0">
                                <Setter Property="Background" Value="CornflowerBlue"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Customer.Person.Gender, ElementName=Cfc}" Value="1">
                                <Setter Property="Background" Value="LightPink"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>


                <Image Grid.Row="0"
                        HorizontalAlignment="Center" VerticalAlignment="Center" Margin="10"
                       MaxHeight="80" MaxWidth="80">
                    <Image.Style>
                        <Style TargetType="Image">
                            <Setter Property="Source" Value="{StaticResource maleGenderIcon}" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Customer.Person.Gender, ElementName=Cfc}" Value="0">
                                    <Setter Property="Source" Value="{StaticResource maleGenderIcon}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Customer.Person.Gender, ElementName=Cfc}" Value="1">
                                    <Setter Property="Source" Value="{StaticResource femaleGenderIcon}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
                <Button Grid.Row="1"
                        Style="{StaticResource defaultButtonStyle}" Content="Upload"/>
            </Grid>
        <WrapPanel ItemWidth="400">
            <TextBox Template="{StaticResource roundedTextbox}" Margin="5" FontSize="18"
                             x:Name="First" Tag="{StaticResource femaleGenderIcon}" Text="{Binding Customer.Person.FirstName, ElementName=Cfc}"/>
            <TextBox Template="{StaticResource roundedTextbox}" Margin="5" FontSize="18"
                             x:Name="Middle" Text="{Binding Customer.Person.MiddleName, ElementName=Cfc}"/>
            <TextBox Template="{StaticResource roundedTextbox}" Margin="5" FontSize="18"
                             x:Name="Last" Text="{Binding Customer.Person.LastName, ElementName=Cfc}"/>
            <TextBox Template="{StaticResource roundedTextbox}" Margin="5" FontSize="18"
                             x:Name="Suffix" Text="{Binding Customer.Person.Suffix, ElementName=Cfc}"/>
            <TextBox  IsEnabled="{Binding Customer.Person.WasMaiden, ElementName=Cfc}" Visibility="{Binding Customer.Person.WasMaiden, ElementName=Cfc, Converter={StaticResource BooleanVisibilityConverter}}"
                        Template="{StaticResource roundedTextbox}" Margin="5" FontSize="18"
                         x:Name="Maiden" Text="{Binding Customer.Person.MaidenName, ElementName=Cfc}"/>
        </WrapPanel>
        <WrapPanel ItemWidth="400">
            <ComboBox x:Name="CustomerGender" SelectedIndex="0"  ItemsSource="{Binding Customer.Person.GenderValues, ElementName=Cfc}" 
                                                      SelectedValue="{Binding Customer.Person.Gender, ElementName=Cfc, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True}"
                                                      Validation.ErrorTemplate="{StaticResource errorTemplate}"/>
            <ComboBox x:Name="CustomerCivilStatus" SelectedIndex="0" ItemsSource="{Binding Customer.Person.CivilStatusValues, ElementName=Cfc}"
                                                      SelectedValue="{Binding Customer.Person.CivilStatus, ElementName=Cfc, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True}"
                                                      Validation.ErrorTemplate="{StaticResource errorTemplate}"/>
            <DatePicker x:Name="CustomerBirthdate" Grid.Column="1"
                                                SelectedDate="{Binding Customer.Person.BirthDate, ElementName=Cfc, TargetNullValue={x:Static system:DateTime.Today}, FallbackValue={x:Static system:DateTime.Today},
                                                ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True}"
                                                Validation.ErrorTemplate="{StaticResource errorTemplateStack}"/>
            <Button Content="Save" Margin="0 10 0 0" Command="{Binding ClassCommand, ElementName=Cfc}"
                    Style="{StaticResource successButtonStyle}"/>
        </WrapPanel>
    </WrapPanel>
</UserControl>
