<Page x:Class="AvenueOne.Views.Pages.CustomerPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:AvenueOne.Views.Pages"
      xmlns:control="clr-namespace:AvenueOne.Views.UserControls"
      xmlns:converters="clr-namespace:AvenueOne.Converters"
      xmlns:system="clr-namespace:System;assembly=mscorlib"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      Title="CustomerPage"
      x:Name="Cp">

    <Page.Resources>
        <converters:BooleanVisibilityConverter x:Key="BooleanVisibilityConverter"/>
    </Page.Resources>

    <TabControl>
        <TabItem Header="Customers">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <GroupBox Header="Customer info" Grid.Column="0" Grid.ColumnSpan="1">
                    <Grid IsEnabled="{Binding UserAccount.IsAdmin}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <!--User Info - left box-->
                        <StackPanel Grid.Column="0" Margin="10">
                            <Grid Margin="0 0 0 10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <Button Content="Add new Customer" Grid.Column="0" MaxHeight="50"
                                        Tag="{StaticResource femaleGenderIcon}"
                                        Style="{StaticResource defaultButtonStyle}" Click="Button_OpenCustomerWindow"
                                    />

                                <Button Grid.Column="1" MaxHeight="50"
                                        Content="Clear content"
                                        Tag="{StaticResource femaleGenderIcon}"
                                        Style="{StaticResource defaultButtonStyle}"
                                        Command="{Binding ClearClassCommand}"
                                    />
                            </Grid>

                            <!--<Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="3*"/>
                                </Grid.ColumnDefinitions>

                                <TextBlock Text="Customer Id:" Grid.Column="0"/>
                                <TextBox IsEnabled="False"
                                    x:Name="Usernames" Text="{Binding Model.Id}" Grid.Column="1" HorizontalAlignment="Stretch"/>
                            </Grid>

                            <Grid Margin="0 10 0 0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="3*"/>
                                </Grid.ColumnDefinitions>

                                <TextBlock Text="Firstname:" Grid.Column="0"/>
                                <TextBox x:Name="CustomerFirstname" Grid.Column="1" HorizontalAlignment="Stretch"
                                         Text="{Binding Profile.FirstName, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True}"
                                          Validation.ErrorTemplate="{StaticResource errorTemplate}"/>
                            </Grid>

                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="93*"/>
                                    <ColumnDefinition Width="62*"/>
                                    <ColumnDefinition Width="26*"/>
                                    <ColumnDefinition Width="21*"/>
                                    <ColumnDefinition Width="124*"/>
                                    <ColumnDefinition Width="45*"/>
                                </Grid.ColumnDefinitions>

                                <TextBlock Text="Middlename:" Grid.Column="0"/>
                                <TextBox x:Name="CustomerMiddlename" Grid.Column="1" HorizontalAlignment="Stretch" Grid.ColumnSpan="5"
                                         Text="{Binding Profile.MiddleName, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True}" 
                                         Validation.ErrorTemplate="{StaticResource errorTemplate}"/>
                            </Grid>

                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="91*"/>
                                    <ColumnDefinition Width="50*"/>
                                    <ColumnDefinition Width="224*"/>
                                </Grid.ColumnDefinitions>

                                <TextBlock Text="Lastname:" Grid.Column="0"/>
                                <TextBox x:Name="CustomerLastname"  Grid.Column="1" HorizontalAlignment="Stretch"
                                         Text="{Binding Profile.LastName, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True}"
                                         Validation.ErrorTemplate="{StaticResource errorTemplate}" Grid.ColumnSpan="2"/>
                            </Grid>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="3*"/>
                                </Grid.ColumnDefinitions>

                                <TextBlock Text="Suffix:" Grid.Column="0"/>
                                <TextBox x:Name="CustomerSuffix" Grid.Column="1" HorizontalAlignment="Stretch"
                             Text="{Binding Profile.Suffix, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True}"
                             Validation.ErrorTemplate="{StaticResource errorTemplate}"/>
                            </Grid>

                            <ComboBox x:Name="CustomerGender" SelectedIndex="0"  ItemsSource="{Binding Profile.GenderValues}" 
                                                  SelectedValue="{Binding Profile.Gender, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True}"
                                                  Validation.ErrorTemplate="{StaticResource errorTemplate}"/>

                            <ComboBox x:Name="CustomerCivilStatus" SelectedIndex="0" ItemsSource="{Binding Profile.CivilStatusValues}"
                                                  SelectedValue="{Binding Profile.CivilStatus, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True}"
                                                  Validation.ErrorTemplate="{StaticResource errorTemplate}"/>

                            <Grid IsEnabled="{Binding Profile.WasMaiden}" Visibility="{Binding Profile.WasMaiden, Converter={StaticResource BooleanVisibilityConverter}}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="94*"/>
                                        <ColumnDefinition Width="173*"/>
                                        <ColumnDefinition Width="110*"/>
                                    </Grid.ColumnDefinitions>

                                    <TextBlock Text="Maiden name:" Grid.Column="0"/>
                                    <TextBox x:Name="CustomerMaidenName" Grid.Column="1" HorizontalAlignment="Stretch" Grid.ColumnSpan="2"
                             Text="{Binding Profile.MaidenName, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True}"
                             Validation.ErrorTemplate="{StaticResource errorTemplate}"/>
                                </Grid>

                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="3*"/>
                                    </Grid.ColumnDefinitions>

                                    <TextBlock Text="Brithdate:" Grid.Column="0"/>
                                    <DatePicker x:Name="CustomerBirthdate" Grid.Column="1"
                                            SelectedDate="{Binding Profile.BirthDate, TargetNullValue={x:Static system:DateTime.Today}, FallbackValue={x:Static system:DateTime.Today},
                                            ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True}"
                                            Validation.ErrorTemplate="{StaticResource errorTemplateStack}"/>
                                </Grid>



                            </Grid>-->

                            <control:CustomerCardControl x:Name="Card" Visibility="Visible" Customer="{Binding Model, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            <control:CustomerFormControl x:Name="Form" Visibility="Collapsed" Customer="{Binding ModelSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <Button x:Name="EditButton" Visibility="{Binding UserAccount.IsAdmin, Converter={StaticResource BooleanVisibilityConverter}}" 
                                    Content="Edit" Click="Button_ChangeVisibility"
                                    Style="{StaticResource defaultButtonStyle}"/>

                            <Button Content="Save Edit" Margin="0 10 0 0" 
                                    Visibility="Collapsed"
                                    x:Name="SaveEditButton"
                                    Style="{StaticResource successButtonStyle}"
                                    Command="{Binding UpdateClassCommand}"/>
                            <Button Content="Delete Customer"
                                    MaxHeight="40"
                                    Visibility="{Binding UserAccount.IsAdmin, Converter={StaticResource BooleanVisibilityConverter}}"
                                    Style="{StaticResource failButtonStyle2}"
                                    Command="{Binding DeleteClassCommand}"/>



                        </StackPanel>
                    </Grid>
                </GroupBox>

                <ListBox Grid.Column="1"
                        ItemsSource="{Binding ModelList}"  SelectedItem="{Binding ModelSelected}"
                          ScrollViewer.HorizontalScrollBarVisibility="Auto">
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel Orientation="Horizontal"/>
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>

                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <control:CustomerCardControl Customer="{Binding}"/>


                            <!--<StackPanel HorizontalAlignment="Center">

                                -->
                            <!--Color status-->
                            <!--
                                <Rectangle HorizontalAlignment="Center"
                                                                                        Height="25"
                                                                                        Width="25"
                                                                                        Margin="0,0,0,0"
                                                                                        Stroke="Black" >
                                    <Rectangle.Style>
                                        <Style TargetType="Rectangle">
                                            <Setter Property="Fill" Value="LawnGreen"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Person.Gender, UpdateSourceTrigger=PropertyChanged}"
                                                                                                Value="1">
                                                    <Setter Property="Fill"
                                                                                                Value="HotPink" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Person.Gender, UpdateSourceTrigger=PropertyChanged}"
                                                                                                Value="0">
                                                    <Setter Property="Fill"
                                                                                                Value="CadetBlue" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Rectangle.Style>
                                </Rectangle>

                                <TextBlock HorizontalAlignment="Center"
                                            Text="{Binding Person.Age}"/>
                                <TextBlock HorizontalAlignment="Center"
                                            Text="{Binding Person.Gender}"/>
                                <TextBlock HorizontalAlignment="Center"
                                            Text="{Binding Person.FullName}"/>
                            </StackPanel>-->



                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </Grid>

        </TabItem>
    </TabControl>
</Page>
