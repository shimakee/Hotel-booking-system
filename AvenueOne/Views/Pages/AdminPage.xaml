<Page x:Class="AvenueOne.Views.Pages.AdminPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:AvenueOne.Views.Pages"
      xmlns:system="clr-namespace:System;assembly=mscorlib"
      xmlns:converters="clr-namespace:AvenueOne.Converters"
      xmlns:control="clr-namespace:AvenueOne.Views.UserControls"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      Title="AdminPage">

    <Page.Resources>
        <converters:BooleanVisibilityConverter x:Key="BooleanVisibilityConverter"/>
        <converters:PasswordConverter x:Key="PasswordConverter"/>
    </Page.Resources>


    <TabControl>

        <!--User management-->
        <TabItem Header="User management">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <!--<Grid.RowDefinitions>
                    <RowDefinition Height="1.5*"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>-->

                <GroupBox Header="User info" Grid.Column="0">
                    <StackPanel>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                                
                                
                            <Button Content="Add new User" Grid.Column="0" 
                                    Style="{StaticResource successButtonStyle}" Click="Button_OpenUserWindow" />
                            <Button Content="Clear content" Grid.Column="1" 
                                    Style="{StaticResource failButtonStyle}"
                                            Command="{Binding UserTab.ClearClassCommand}"/>
                        </Grid>
                        
                        <control:UserFormControl x:Name="UserForm" Visibility="Collapsed" User="{Binding UserTab.ModelSelected}" IsPasswordIncluded="{Binding UserTab.IsPasswordIncluded}" ClassCommand="{Binding UserTab.UpdateClassCommand}"/>
                        <control:UserCardControl x:Name="UserCard" Visibility="Visible" User="{Binding UserTab.ModelSelected}"/>


                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            
                            <Button  Grid.Column="0"
                                x:Name="EditButton" Content="Edit" Style="{StaticResource defaultButtonStyle}" Click="Button_ChangeVisibilityUser" />

                            <Button Content="Delete User" Grid.Column="1"
                                    Style="{StaticResource failButtonStyle2}"
                                        Command="{Binding UserTab.DeleteClassCommand}"/>
                        </Grid>

                        <!--<ListBox Grid.Column="1"
                         x:Name="UsersList2"
                        ItemsSource="{Binding UserTab.ModelList}" SelectedItem="{Binding UserTab.ModelSelected}"
                          ScrollViewer.HorizontalScrollBarVisibility="Auto">
                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel Orientation="Horizontal"/>
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>

                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <control:UserCardControl User="{Binding}"/>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>-->
                    </StackPanel>
                </GroupBox>

                <GroupBox Header="User list" Grid.Column="1">
                    <DataGrid  x:Name="UsersList" Grid.Column="1"
                            ItemsSource="{Binding UserTab.ModelList}" SelectedItem="{Binding UserTab.ModelSelected}"
                               IsReadOnly="True" CanUserAddRows="False" AutoGenerateColumns="False">
                        <DataGrid.Columns>
                            <DataGridCheckBoxColumn Header="Admin" Binding="{Binding IsAdmin}" Width="*"/>
                            <DataGridTextColumn Header="Username" Binding="{Binding Username}" Width="1.5*"/>
                            <DataGridTextColumn Header="Full name" Binding="{Binding Person.FullName}" Width="4*"/>
                            <DataGridTextColumn Header="Birth date" Binding="{Binding Person.BirthDate, StringFormat=d}" Width="1.5*"/>
                            <DataGridTextColumn Header="Gender" Binding="{Binding Person.Gender}" Width="*"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </GroupBox>
            </Grid>
        </TabItem>

        <TabItem Header="Room management">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="244*"/>
                    <ColumnDefinition Width="20*"/>
                    <ColumnDefinition Width="70*"/>
                    <ColumnDefinition Width="195*"/>
                    <ColumnDefinition Width="265*"/>
                </Grid.ColumnDefinitions>


                <GroupBox Header="Room info" Grid.Column="0" Grid.ColumnSpan="2">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="2.5*"/>
                            <ColumnDefinition Width="2*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="2*"/>
                            <ColumnDefinition Width="2*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="2*"/>
                        </Grid.RowDefinitions>


                        <Button Grid.Row="0" Grid.Column="0"
                            Content="Add Room"
                                Command="{Binding RoomTab.RoomViewModel.CreateClassCommand}"/>
                        <Button Grid.Row="0" Grid.Column="1"
                            Content="Clear content"
                                Command="{Binding RoomTab.RoomViewModel.ClearClassCommand}"/>
                        <TextBlock Grid.Row ="0" Grid.Column="2"  HorizontalAlignment="Right"
                                   Text="Id:" />
                        <TextBox IsEnabled="False"
                            Grid.Row="0" Grid.Column="3" Grid.ColumnSpan="2"
                                 Text="{Binding RoomTab.RoomViewModel.Model.Id}"/>

                        <TextBlock Grid.Row="1" Grid.Column="0"
                                    Text="Name:"/>
                        <TextBox Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="3"
                                 Text="{Binding RoomTab.RoomViewModel.ModelSelected.Name}"/>

                        <TextBlock Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="1"
                            Text="Max Occupants :"/>
                        <TextBox Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2"
                                 Text="{Binding RoomTab.RoomViewModel.ModelSelected.MaxOccupants}"/>
                        
                        <TextBlock Grid.Row="2" Grid.Column="3"
                            Text="Floor :"/>
                        <TextBox Grid.Row="2" Grid.Column="4" Grid.ColumnSpan="2"
                                 Text="{Binding RoomTab.RoomViewModel.ModelSelected.Floor}"/>

                        <TextBlock Grid.Row="3" Grid.Column="0"
                            Text="Roomtype :"/>
                        <ComboBox Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="2"
                                  ItemsSource="{Binding RoomTab.RoomViewModel.RoomTypeList}"
                                  SelectedItem="{Binding RoomTab.RoomViewModel.ModelSelected.RoomType}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Name}" />
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>

                        <TextBlock Grid.Row="2" Grid.Column="3"
                            Text="Floor :"/>
                        <TextBox Grid.Row="2" Grid.Column="4" Grid.ColumnSpan="2"
                                 Text="{Binding RoomTab.RoomViewModel.ModelSelected.Floor}"/>

                        <TextBlock Grid.Row="3" Grid.Column="3"
                            Text="Rate :"/>
                        <TextBox IsEnabled="False" Grid.Row="4" Grid.Column="3" Grid.ColumnSpan="2"
                                 Text="{Binding RoomTab.RoomViewModel.ModelSelected.RoomType.Rate}"/>
                        <TextBox IsEnabled="False" Grid.Row="4" Grid.Column="4" Grid.ColumnSpan="2"
                                 Text="{Binding RoomTab.RoomViewModel.ModelSelected.RoomType.RateType}"/>

                        <TextBlock Grid.Row="4" Grid.Column="0"
                            Text="Details :"/>
                        <TextBox Grid.Row="5" Grid.Column="0" Grid.RowSpan="1" Grid.ColumnSpan="5" 
                                    Margin="1" VerticalAlignment="Stretch"
                                     TextWrapping="Wrap" AcceptsReturn="True"
                                     HorizontalScrollBarVisibility="Disabled"
                                     VerticalScrollBarVisibility="Auto"
                                 Text="{Binding RoomTab.RoomViewModel.ModelSelected.Details}"/>

                        <Button Grid.Row="6" Grid.Column="3"
                            Content="Save" 
                                Command="{Binding RoomTab.RoomViewModel.UpdateClassCommand}"/>
                        <Button Grid.Row="6" Grid.Column="4"
                            Content="Delete " 
                                Command="{Binding RoomTab.RoomViewModel.DeleteClassCommand}"/>

                        <DataGrid Grid.Row="7" Grid.Column="0" Grid.ColumnSpan="5"
                                Margin="0 10 0 0"
                                IsReadOnly="True" CanUserAddRows="False" AutoGenerateColumns="False"
                                  
                                  ItemsSource="{Binding RoomTab.RoomViewModel.ModelList}" SelectedItem="{Binding RoomTab.RoomViewModel.ModelSelected, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Name" Binding="{Binding Name}" Width="3*"/>
                                <DataGridTextColumn Header="Room type" Binding="{Binding RoomType.Name}" Width="4*"/>
                                <DataGridTextColumn Header="Max" Binding="{Binding MaxOccupants}" Width="2*"/>
                                <DataGridTextColumn Header="Rate" Binding="{Binding RoomType.Rate}" Width="2*"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>
                </GroupBox>

                <GroupBox Header="Room Type" Grid.Column="2"
                          Padding="5" Grid.ColumnSpan="2">
                    <StackPanel>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <Button Grid.Column="0" Content="Add RoomType" 
                                    Style="{StaticResource successButtonStyle}"
                                    Command="{Binding }"/>
                            <Button Grid.Column="1" Content="Clear" 
                                    Style="{StaticResource failButtonStyle}"
                                    Command="{Binding  RoomTab.RoomTypeViewModel.ClearClassCommand}"/>
                        </Grid>
                        
                        <control:RoomTypeCardControl RoomType="{Binding  RoomTab.RoomTypeViewModel.Model}" Height="200"/>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <Button Grid.Column="0" Content="Edit" 
                                    Style="{StaticResource defaultButtonStyle}"/>
                            <Button Grid.Column="1" Content="Delete" 
                                    Style="{StaticResource failButtonStyle2}"
                                    Command="{Binding RoomTab.RoomTypeViewModel.DeleteClassCommand}"/>
                        </Grid>

                        <DataGrid Grid.Row="7" Grid.Column="0" Grid.ColumnSpan="5"
                                Margin="0 10 0 0"
                                IsReadOnly="True" CanUserAddRows="False" AutoGenerateColumns="False"
                                  
                                  ItemsSource="{Binding RoomTab.RoomTypeViewModel.ModelList}" SelectedItem="{Binding RoomTab.RoomTypeViewModel.ModelSelected, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Name" Binding="{Binding Name}" Width="2*"/>
                                <DataGridTextColumn Header="Details" Binding="{Binding Details}" Width="4*"/>
                                <DataGridTextColumn Header="Rate" Binding="{Binding Rate}" Width="4*"/>
                                <DataGridTextColumn Header="Rate type" Binding="{Binding RateType}" Width="4*"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </StackPanel>
                    <!--<Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="2*"/>
                            <ColumnDefinition Width="2*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="2*"/>
                            <ColumnDefinition Width="2*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="2*"/>
                        </Grid.RowDefinitions>

                        <Button Grid.Row="0" Grid.Column="0"
                            Content="Add Room type"
                                Command="{Binding RoomTab.RoomTypeViewModel.CreateClassCommand}"/>
                        <Button Grid.Row="0" Grid.Column="1"
                            Content="Clear content"
                                Command="{Binding RoomTab.RoomTypeViewModel.ClearClassCommand}"/>
                        <TextBlock Grid.Row ="0" Grid.Column="2"  HorizontalAlignment="Right"
                                   Text="Id:" />
                        <TextBox IsEnabled="False"
                            Grid.Row="0" Grid.Column="3" Grid.ColumnSpan="2"
                                 Text="{Binding RoomTab.RoomTypeViewModel.Model.Id}"/>
                        <TextBlock Grid.Row="1" Grid.Column="0"
                                    Text="Name:"/>
                        <TextBox Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="3"
                                 Text="{Binding RoomTab.RoomTypeViewModel.ModelSelected.Name}"/>

                        <TextBlock Grid.Row="2" Grid.Column="0"
                            Text="Rate :"/>
                        <TextBox Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2"
                                 Text="{Binding RoomTab.RoomTypeViewModel.ModelSelected.Rate}"/>

                        <TextBlock Grid.Row="2" Grid.Column="3"
                            Text="Rate type :"/>
                        --><!--<TextBox Grid.Row="2" Grid.Column="4" Grid.ColumnSpan="2"
                                 Text="{Binding RoomTab.RoomTypeViewModel.ModelSelected.RateType}"/>--><!--
                        <ComboBox Grid.Row="2" Grid.Column="4" Grid.ColumnSpan="2" 
                                        SelectedIndex="0" ItemsSource="{Binding RoomTab.RoomTypeViewModel.ModelSelected.RateTypeValues}"
                                                  SelectedValue="{Binding RoomTab.RoomTypeViewModel.ModelSelected.RateType, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True}"
                                                  Validation.ErrorTemplate="{StaticResource errorTemplate}"/>
                        --><!--<ComboBox Grid.Row="2" Grid.Column="4" Grid.ColumnSpan="2"
                                        SelectedIndex="0"  ItemsSource="{Binding RoomTab.RoomTypeViewModel.Model.RateTypeValues}" 
                                                  SelectedValue="{Binding Profile.Gender, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True}"
                                                  Validation.ErrorTemplate="{StaticResource errorTemplate}"/>--><!--

                        <TextBlock Grid.Row="3" Grid.Column="0"
                            Text="Details:"/>
                        <TextBox Grid.Row="4" Grid.Column="0" Grid.RowSpan="2" Grid.ColumnSpan="2" 
                                    Margin="1" VerticalAlignment="Stretch"
                                     TextWrapping="Wrap" AcceptsReturn="True"
                                     HorizontalScrollBarVisibility="Disabled"
                                     VerticalScrollBarVisibility="Auto"
                                 Text="{Binding RoomTab.RoomTypeViewModel.ModelSelected.Details}"/>

                        <TextBlock Grid.Row="3" Grid.Column="3"
                                   Text="Amenities:"/>
                        
                        <Button Content="Detach" Grid.Row="4" Grid.Column="4"
                                                    Command="{Binding RoomTab.RoomTypeViewModel.DetachAmenityCommand}"/>
                        <DataGrid Grid.Row="5" Grid.Column="3" Grid.ColumnSpan="2"
                                IsReadOnly="True" CanUserAddRows="False" AutoGenerateColumns="False"
                                  SelectionMode="Single" SelectedItem="{Binding RoomTab.RoomTypeViewModel.AmenitiesSelected}"
                                  ItemsSource="{Binding RoomTab.RoomTypeViewModel.ModelSelected.Amenities}">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Name" Binding="{Binding Name}" Width="2*"/>
                                <DataGridTextColumn Header="Details" Binding="{Binding Details}" Width="4*"/>
                            </DataGrid.Columns>
                            
                        </DataGrid>

                        <Button Grid.Row="6" Grid.Column="0"
                            Content="Save" 
                                Command="{Binding RoomTab.RoomTypeViewModel.UpdateClassCommand}"/>
                        <Button Grid.Row="6" Grid.Column="1"
                            Content="Delete " 
                                Command="{Binding RoomTab.RoomTypeViewModel.DeleteClassCommand}"/>
                        
                        <DataGrid Grid.Row="7" Grid.Column="0" Grid.ColumnSpan="5"
                                Margin="0 10 0 0"
                                IsReadOnly="True" CanUserAddRows="False" AutoGenerateColumns="False"
                                  
                                  ItemsSource="{Binding RoomTab.RoomTypeViewModel.ModelList}" SelectedItem="{Binding RoomTab.RoomTypeViewModel.ModelSelected, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Name" Binding="{Binding Name}" Width="2*"/>
                                <DataGridTextColumn Header="Details" Binding="{Binding Details}" Width="4*"/>
                                <DataGridTextColumn Header="Rate" Binding="{Binding Rate}" Width="4*"/>
                                <DataGridTextColumn Header="Rate type" Binding="{Binding RateType}" Width="4*"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>-->
                    
                </GroupBox>

                <GroupBox Header="Amenities" Grid.Column="4"
                           Padding="5">

                    <StackPanel>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            
                            <Button Grid.Row="0" Grid.Column="0"
                                    Style="{StaticResource successButtonStyle}"
                                Content="Add Amenities" Click="Button_OpenAmenityWindow"/>
                            <Button Grid.Row="0" Grid.Column="1"
                                    Style="{StaticResource failButtonStyle}"
                                Content="Clear" Command="{Binding RoomTab.AmenitiesViewModel.ClearClassCommand}"/>
                        </Grid>
                        <control:AmenitiesFormControl Visibility="Collapsed" x:Name="AmenityForm" Amenity="{Binding RoomTab.AmenitiesViewModel.ModelSelected}" ClassCommand="{Binding RoomTab.AmenitiesViewModel.UpdateClassCommand}"/>
                        <control:AmenityCardControl Visibility="Visible" x:Name="AmenityCard" Amenity="{Binding RoomTab.AmenitiesViewModel.ModelSelected}"/>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            
                            

                            <Button x:Name="EditAmenitiesButton"
                                    Content="Edit"
                                Style="{StaticResource defaultButtonStyle}" Click="EditAmenitiesButton_Click"/>
                            <Button Grid.Row="4" Grid.Column="4"
                                Content="Delete " Style="{StaticResource failButtonStyle2}"
                                    Command="{Binding RoomTab.AmenitiesViewModel.DeleteClassCommand}"/>
                        </Grid>
                        <Button Content="Link" Grid.Row="5" Grid.Column="0"
                                Style="{StaticResource cautionButtonStyle}"
                                                    Command="{Binding RoomTab.RoomTypeViewModel.LinkAmenityCommand}"/>

                        <DataGrid  Grid.Row="7" Grid.Column="0" Grid.ColumnSpan="5"
                                Margin="0 10 0 0"
                                x:Name="AmenitiesList"
                                ItemsSource="{Binding RoomTab.AmenitiesViewModel.ModelList}" SelectedItem="{Binding RoomTab.AmenitiesSelected, UpdateSourceTrigger=PropertyChanged}"
                                   IsReadOnly="True" CanUserAddRows="False" AutoGenerateColumns="False">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Name" Binding="{Binding Name}" Width="2*"/>
                                <DataGridTextColumn Header="Details" Binding="{Binding Details}" Width="3*"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </StackPanel>

                    <!--<Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="2*"/>
                            <ColumnDefinition Width="2*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="2*"/>
                            <ColumnDefinition Width="2*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="2*"/>
                        </Grid.RowDefinitions>


                        <Button Grid.Row="0" Grid.Column="0"
                            Content="Add Amenities" Command="{Binding RoomTab.AmenitiesViewModel.CreateClassCommand}"/>
                        <Button Grid.Row="0" Grid.Column="1"
                            Content="Clear content" Command="{Binding RoomTab.AmenitiesViewModel.ClearClassCommand}"/>

                        <TextBlock Grid.Row="0" Grid.Column="2"
                                   HorizontalAlignment="Right"
                                    Text="Id:"/>
                        <TextBox IsEnabled="False"
                                Grid.Row="0" Grid.Column="3" Grid.ColumnSpan="2"
                                 Text="{Binding RoomTab.AmenitiesViewModel.Model.Id, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True}" 
                                         Validation.ErrorTemplate="{StaticResource errorTemplate}"/>

                        <TextBlock Grid.Row="1" Grid.Column="0"
                                    Text="Name:"/>
                        <TextBox Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="3"
                                 Text="{Binding RoomTab.AmenitiesViewModel.ModelSelected.Name, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True}" 
                                         Validation.ErrorTemplate="{StaticResource errorTemplate}"/>

                        <TextBlock Grid.Row="2" Grid.Column="0"
                            Text="Details:"/>
                        <TextBox Grid.Row="3" Grid.Column="0" Grid.RowSpan="2" Grid.ColumnSpan="2" 
                                    Margin="1" VerticalAlignment="Stretch"
                                     TextWrapping="Wrap" AcceptsReturn="True"
                                     HorizontalScrollBarVisibility="Disabled"
                                     VerticalScrollBarVisibility="Auto"
                                    Text="{Binding RoomTab.AmenitiesViewModel.ModelSelected.Details, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True}" 
                                         Validation.ErrorTemplate="{StaticResource errorTemplate}"/>

                        <TextBlock Grid.Row="2" Grid.Column="3"
                                   Text="Room Type:"/>
                        <DataGrid Grid.Row="3" Grid.Column="3" Grid.ColumnSpan="2"
                                IsReadOnly="True" CanUserAddRows="False" AutoGenerateColumns="False"
                                  ItemsSource="{Binding RoomTab.AmenitiesViewModel.ModelSelected.RoomTypes, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True}" 
                                         Validation.ErrorTemplate="{StaticResource errorTemplate}">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Name" Binding="{Binding Name}" Width="2*"/>
                                <DataGridTextColumn Header="Details" Binding="{Binding Details}" Width="4*"/>
                            </DataGrid.Columns>
                        </DataGrid>

                        <Button Grid.Row="4" Grid.Column="3"
                            Content="Save"
                                Command="{Binding RoomTab.AmenitiesViewModel.UpdateClassCommand}"/>
                        <Button Grid.Row="4" Grid.Column="4"
                            Content="Delete " 
                                Command="{Binding RoomTab.AmenitiesViewModel.DeleteClassCommand}"/>
                        <Button Content="Link" Grid.Row="5" Grid.Column="0"
                                                    Command="{Binding RoomTab.RoomTypeViewModel.LinkAmenityCommand}"/>


                        <DataGrid  Grid.Row="7" Grid.Column="0" Grid.ColumnSpan="5"
                            Margin="0 10 0 0"
                            x:Name="AmenitiesList"
                            ItemsSource="{Binding RoomTab.AmenitiesViewModel.ModelList}" SelectedItem="{Binding RoomTab.AmenitiesSelected, UpdateSourceTrigger=PropertyChanged}"
                               IsReadOnly="True" CanUserAddRows="False" AutoGenerateColumns="False">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Name" Binding="{Binding Name}" Width="2*"/>
                                <DataGridTextColumn Header="Details" Binding="{Binding Details}" Width="3*"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>-->
                </GroupBox>
            </Grid>
        </TabItem>

        <TabItem    Header="Customer Management">

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <GroupBox Header="Customer info" Grid.Row="0" Grid.ColumnSpan="3">
                    <Grid IsEnabled="{Binding UserAccount.IsAdmin}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <!--User Info - left box-->
                        <StackPanel Grid.Column="0" Margin="10">
                            <Grid Margin="0 0 0 10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <Button Content="Add new Customer" Grid.Column="0" 
                                        Style="{StaticResource successButtonStyle}" Click="Button_OpenCustomerWindow"
                                    />
                                <Button Content="Clear content" Grid.Column="1" 
                                        Style="{StaticResource failButtonStyle}"
                                        Command="{Binding CustomerTab.ClearClassCommand}"
                                    />
                            </Grid>

                            <control:CustomerCardControl Visibility="Visible" x:Name="CustomerCard" Customer="{Binding CustomerTab.Model}"/>
                            <control:CustomerFormControl Visibility="Collapsed" x:Name="CustomerForm" Customer="{Binding CustomerTab.ModelSelected}" ClassCommand="{Binding CustomerTab.UpdateClassCommand}"/>

                            <!--<Button Content="Save Edit" Margin="0 10 0 0" 
                                    Command="{Binding CustomerTab.UpdateClassCommand}"/>-->


                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <Button Grid.Column="0"
                                    x:Name="EditCustomer" Content="Edit" Click="Button_ChangeVisibilityCustomer"
                                        Style="{StaticResource defaultButtonStyle}"/>

                                <Button Content="Delete Customer"
                                            Style="{StaticResource failButtonStyle2}" Grid.Column="1"
                                            Command="{Binding CustomerTab.DeleteClassCommand}"/>
                            </Grid>


                            <!--<Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="3*"/>
                                </Grid.ColumnDefinitions>

                                <TextBlock Text="Customer Id:" Grid.Column="0"/>
                                <TextBox IsEnabled="False"
                                    x:Name="Usernames" Text="{Binding CustomerTab.Model.Id}" Grid.Column="1" HorizontalAlignment="Stretch"/>
                            </Grid>

                            <Grid Margin="0 10 0 0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="3*"/>
                                </Grid.ColumnDefinitions>

                                <TextBlock Text="Firstname:" Grid.Column="0"/>
                                <TextBox x:Name="CustomerFirstname" Grid.Column="1" HorizontalAlignment="Stretch"
                                         Text="{Binding CustomerTab.Profile.FirstName, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True}"
                                          Validation.ErrorTemplate="{StaticResource errorTemplate}"/>
                            </Grid>

                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="93*"/>
                                    <ColumnDefinition Width="62*"/>
                                    <ColumnDefinition Width="26*"/>
                                    <ColumnDefinition Width="21*"/>
                                    <ColumnDefinition Width="124*"/>
                                    <ColumnDefinition Width="45*"/>
                                </Grid.ColumnDefinitions>

                                <TextBlock Text="Middlename:" Grid.Column="0"/>
                                <TextBox x:Name="CustomerMiddlename" Grid.Column="1" HorizontalAlignment="Stretch" Grid.ColumnSpan="5"
                                         Text="{Binding CustomerTab.Profile.MiddleName, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True}" 
                                         Validation.ErrorTemplate="{StaticResource errorTemplate}"/>
                            </Grid>

                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="3*"/>
                                </Grid.ColumnDefinitions>

                                <TextBlock Text="Lastname:" Grid.Column="0"/>
                                <TextBox x:Name="CustomerLastname"  Grid.Column="1" HorizontalAlignment="Stretch"
                                         Text="{Binding CustomerTab.Profile.LastName, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True}"
                                         Validation.ErrorTemplate="{StaticResource errorTemplate}"/>
                            </Grid>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="3*"/>
                                </Grid.ColumnDefinitions>

                                <TextBlock Text="Suffix:" Grid.Column="0"/>
                                <TextBox x:Name="CustomerSuffix" Grid.Column="1" HorizontalAlignment="Stretch"
                             Text="{Binding CustomerTab.Profile.Suffix, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True}"
                             Validation.ErrorTemplate="{StaticResource errorTemplate}"/>
                            </Grid>

                            <ComboBox x:Name="CustomerGender" SelectedIndex="0"  ItemsSource="{Binding CustomerTab.Profile.GenderValues}" 
                                                  SelectedValue="{Binding CustomerTab.Profile.Gender, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True}"
                                                  Validation.ErrorTemplate="{StaticResource errorTemplate}"/>

                            <ComboBox x:Name="CustomerCivilStatus" SelectedIndex="0" ItemsSource="{Binding CustomerTab.Profile.CivilStatusValues}"
                                                  SelectedValue="{Binding CustomerTab.Profile.CivilStatus, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True}"
                                                  Validation.ErrorTemplate="{StaticResource errorTemplate}"/>

                            <Grid IsEnabled="{Binding CustomerTab.Profile.WasMaiden}" Visibility="{Binding CustomerTab.Profile.WasMaiden, Converter={StaticResource BooleanVisibilityConverter}}">
                                -->
                            <!--<Grid>-->
                            <!--
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="94*"/>
                                    <ColumnDefinition Width="173*"/>
                                    <ColumnDefinition Width="110*"/>
                                </Grid.ColumnDefinitions>

                                <TextBlock Text="Maiden name:" Grid.Column="0"/>
                                <TextBox x:Name="CustomerMaidenName" Grid.Column="1" HorizontalAlignment="Stretch" Grid.ColumnSpan="2"
                             Text="{Binding CustomerTab.Profile.MaidenName, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True}"
                             Validation.ErrorTemplate="{StaticResource errorTemplate}"/>
                            </Grid>

                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="3*"/>
                                </Grid.ColumnDefinitions>

                                <TextBlock Text="Brithdate:" Grid.Column="0"/>
                                <DatePicker x:Name="CustomerBirthdate" Grid.Column="1"
                                            SelectedDate="{Binding CustomerTab.Profile.BirthDate, TargetNullValue={x:Static system:DateTime.Today}, FallbackValue={x:Static system:DateTime.Today},
                                            ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True}"
                                            Validation.ErrorTemplate="{StaticResource errorTemplateStack}"/>
                            </Grid>-->
                        </StackPanel>

                        <!--User info - right-->
                        <!--<StackPanel Grid.Column="1" Margin="10">
                            <Grid IsEnabled="False">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="3*"/>
                                </Grid.ColumnDefinitions>

                                <TextBlock Text="Address:" Grid.Column="0"/>
                                <StackPanel Grid.Column="1">
                                    <TextBox x:Name="Streets" Text="Street"/>


                                    <Grid Grid.Column="1">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>

                                        <TextBox x:Name="Citys" Text="City" Grid.Column="0" Grid.Row="0"/>
                                        <TextBox x:Name="Zipcodes" Text="Zipcode" Grid.Column="1" Grid.Row="0"/>
                                        <TextBox x:Name="Regions" Text="Region" Grid.Column="0" Grid.Row="1"/>
                                        <TextBox x:Name="Countrys" Text="Country" Grid.Column="1" Grid.Row="1"/>
                                    </Grid>
                                </StackPanel>
                            </Grid>

                            <Grid IsEnabled="False">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="3*"/>
                                </Grid.ColumnDefinitions>

                                <TextBlock Text="Contact #:" Grid.Column="0"/>
                                <Grid Grid.Column="1">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="3*"/>
                                    </Grid.ColumnDefinitions>

                                    <TextBox x:Name="CountryCodes" Text="Country" Grid.Column="0"/>
                                    <TextBox x:Name="AreaCodes" Text="Area" Grid.Column="1"/>
                                    <TextBox x:Name="Numbers" Text="Number" Grid.Column="2"/>
                                </Grid>
                            </Grid>

                            <Grid IsEnabled="False">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="3*"/>
                                </Grid.ColumnDefinitions>

                                <TextBlock Text="Email:" Grid.Column="0"/>
                                <TextBox x:Name="Emails" Text="Email address" Grid.Column="1"/>
                            </Grid>

                            <Button Content="Save Edit" Margin="0 10 0 0" 
                                    Command="{Binding CustomerTab.UpdateClassCommand}"/>
                            <Button Content="Delete Customer"
                                    Command="{Binding CustomerTab.DeleteClassCommand}"/>
                        </StackPanel>-->
                    </Grid>
                </GroupBox>



                <GroupBox Header="Customer list" Grid.Column="1">
                    <DataGrid  x:Name="CustomerList" Grid.Column="1"
                            ItemsSource="{Binding CustomerTab.ModelList}" SelectedItem="{Binding CustomerTab.ModelSelected}"
                               IsReadOnly="True" CanUserAddRows="False" AutoGenerateColumns="False">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Id" Binding="{Binding Id}" Width="*"/>
                            <DataGridTextColumn Header="Full name" Binding="{Binding Person.FullName}" Width="4*"/>
                            <DataGridTextColumn Header="Birth date" Binding="{Binding Person.BirthDate , StringFormat=d}" Width="2*"/>
                            <DataGridTextColumn Header="Gender" Binding="{Binding Person.Gender}" Width="*"/>
                            <DataGridTextColumn>
                                <DataGridTextColumn.Header>
                                    <Button Content="Refresh"/>
                                </DataGridTextColumn.Header>
                            </DataGridTextColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </GroupBox>
            </Grid>
        </TabItem>
    </TabControl>
</Page>
